Searching 3783 files for "next_form_url" (case sensitive, whole word)

/Volumes/Work/ecommerce/market_street/app/controllers/shopping/base_controller.rb:
    7    private
    8  
    9:   def next_form_url(order)
   10      next_form(order) || shopping_orders_url
   11    end

/Volumes/Work/ecommerce/market_street/app/controllers/shopping/billing_addresses_controller.rb:
   35        if @shopping_address.id
   36          update_order_address_id(@shopping_address.id)
   37:         redirect_to(next_form_url(session_order))
   38        else
   39          form_info
   ..
   52        if @shopping_address.save
   53          update_order_address_id(@shopping_address.id)
   54:         redirect_to(next_form_url(session_order))
   55        else
   56          # the form needs to have an id
   ..
   67      address = current_user.addresses.find(params[:id])
   68      update_order_address_id(address.id)
   69:     redirect_to next_form_url(session_order)
   70    end
   71  

/Volumes/Work/ecommerce/market_street/app/controllers/shopping/coupons_controller.rb:
    9        session_order.update_attributes( :coupon_id => @coupon.id )
   10        flash[:notice] = "Successfully added coupon code #{@coupon.code}."
   11:       redirect_to next_form_url(session_order)
   12      else
   13        form_info

/Volumes/Work/ecommerce/market_street/app/controllers/shopping/orders_controller.rb:
   28      @order = session_cart.add_items_to_checkout(order) # need here because items can also be removed
   29      binding.pry
   30:     redirect_to next_form_url(order)
   31    end
   32  

/Volumes/Work/ecommerce/market_street/coverage/rspec/index.html:
 19980            <span class="hits">1</span>
 19981            
 19982:           <code class="ruby">  def next_form_url(order)</code>
 19983          </li>
 19984        
 .....
 20610            <span class="hits">1</span>
 20611            
 20612:           <code class="ruby">        redirect_to(next_form_url(session_order))</code>
 20613          </li>
 20614        
 .....
 20712            <span class="hits">1</span>
 20713            
 20714:           <code class="ruby">        redirect_to(next_form_url(session_order))</code>
 20715          </li>
 20716        
 .....
 20802            <span class="hits">1</span>
 20803            
 20804:           <code class="ruby">    redirect_to next_form_url(session_order)</code>
 20805          </li>
 20806        
 .....
 21438            <span class="hits">1</span>
 21439            
 21440:           <code class="ruby">      redirect_to next_form_url(session_order)</code>
 21441          </li>
 21442        

/Volumes/Work/ecommerce/market_street/spec/controllers/shopping/billing_addresses_controller_spec.rb:
   27    it "create action redirects when model is valid" do
   28      Address.any_instance.stubs(:valid?).returns(true)
   29:     controller.stubs(:next_form_url).returns(shopping_shipping_methods_url)
   30      post :create, :address => @billing_address.attributes
   31      expect(response).to redirect_to(shopping_shipping_methods_url)
   ..
   45    it "update action redirects when model is valid" do
   46      Address.any_instance.stubs(:valid?).returns(true)
   47:     controller.stubs(:next_form_url).returns(shopping_shipping_methods_url)
   48      put :update, :id => @billing_address.id, :address => @billing_address.attributes
   49      expect(response).to redirect_to(shopping_shipping_methods_url)
   ..
   52    it "update action redirects when model is valid" do
   53      Address.any_instance.stubs(:valid?).returns(true)
   54:     controller.stubs(:next_form_url).returns(shopping_shipping_methods_url)
   55      put :select_address, :id => @billing_address.id
   56      expect(response).to redirect_to(shopping_shipping_methods_url)

/Volumes/Work/ecommerce/market_street/spec/controllers/shopping/coupons_controller_spec.rb:
   36      Coupons::CouponValue.any_instance.stubs(:eligible?).returns(true)
   37      Shopping::CouponsController.any_instance.stubs(:update_order_coupon_id).returns(true)
   38:     @controller.expects(:next_form_url).returns(shopping_orders_url)
   39      post :create, :coupon => {:code => 'qwerty' }
   40      expect(response).to redirect_to(shopping_orders_url)

/Volumes/Work/ecommerce/market_street/spec/controllers/shopping/shipping_methods_controller_spec.rb:
   68      @shipping_method = create(:shipping_method)
   69      @controller.stubs(:not_secure?).returns(false)
   70:     @controller.stubs(:next_form_url).returns(shopping_orders_url)
   71      ShippingMethod.any_instance.stubs(:valid?).returns(true)
   72      put :update, :id => @shipping_method.id

16 matches across 8 files
